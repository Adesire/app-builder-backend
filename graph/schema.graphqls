type Passphrase {
  host: String!
  view: String!
}

type Password {
  host: String!
  view: String!
}

type PSTN {
  number: String!
  dtmf: String!
}

input PasswordInput {
  host: String!
  view: String!
}

type ShareResponse {
  password: Password
  passphrase: Passphrase
  pstn: PSTN
}

type UserCredentials {
  rtc: String!
  rtm: String
  uid: Int!
}

type Session { 
  channel: String
  isHost: Boolean!
  mainUser: UserCredentials!
  screenShare: UserCredentials!
}

type User {
  name: String!
  email: String!
}

type RecordingResult {
  rid: String!
  sid: String!
}

type Query {
  joinChannel(channel: String!, password: String!): Session!
  joinChannelWithPassphrase(passphrase: String!): Session!
  share(channel: String!): ShareResponse!
  getUser: User!
  getSessions: [String!]
}

type Mutation {
  createChannel(channel: String!, password: PasswordInput, enableLink: Boolean = true, enablePSTN: Boolean = false): ShareResponse!
  updateUserName(name: String!): User!
  startRecordingSession(channel: String!, uid: Int!): RecordingResult!
  stopRecordingSession(channel: String!, uid: Int!, rid: String!, sid: String!): String!
  logoutSession(token: String!): [String!]
  logoutAllSessions: String
}